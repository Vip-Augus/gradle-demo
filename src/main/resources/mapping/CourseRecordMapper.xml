<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gradle.demo.dao.CourseRecordMapper">
    <resultMap id="BaseResultMap" type="gradle.demo.model.CourseRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
        <result column="course_file_url" property="courseFileUrl" jdbcType="VARCHAR"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="date" property="date" jdbcType="VARCHAR"/>
        <result column="class_time" property="classTime" jdbcType="VARCHAR"/>
        <result column="upload_end_time" property="uploadEndTime" jdbcType="VARCHAR"/>
        <result column="class_begin" property="classBegin" jdbcType="INTEGER"/>
        <result column="class_end" property="classEnd" jdbcType="INTEGER"/>
        <result column="classroom_id" property="classroomId" jdbcType="INTEGER"/>
        <result column="check_code" property="checkCode" jdbcType="CHAR" />
        <result column="create_date" property="createDate" jdbcType="VARCHAR"/>
        <result column="modify_date" property="modifyDate" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, course_name, course_file_url, course_id, date,
    class_time, upload_end_time, class_begin,
    class_end, classroom_id, check_code,
    create_date, modify_date
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from course_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByCId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM course_record
        WHERE course_id = #{courseId, jdbcType=INTEGER}
        ORDER BY create_date desc
    </select>
    <select id="selectByClassroomId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM course_record
        WHERE classroom_id = #{classroomId, jdbcType=INTEGER}
        ORDER BY
        date desc, class_begin
    </select>

    <select id="selectByClassTimeAndCID" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM course_record
        WHERE course_id = #{courseId, jdbcType=INTEGER}
        AND class_time = #{classTime, jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from course_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="gradle.demo.model.CourseRecord">
        <selectKey resultType="INTEGER" order="BEFORE" keyProperty="id">
            SELECT gen_id('course_record') as id
        </selectKey>
        insert into course_record (id, course_name, course_file_url,
        course_id, date, class_time, upload_end_time,
        class_begin, class_end, classroom_id,
        check_code, create_date)
        values (#{id, jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{courseFileUrl,jdbcType=VARCHAR},
        #{courseId,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR},
        #{classTime, jdbcType=VARCHAR}, #{uploadEndTime,jdbcType=VARCHAR},
        #{classBegin,jdbcType=INTEGER}, #{classEnd,jdbcType=INTEGER}, #{classroomId,jdbcType=INTEGER},
        #{checkCode, jdbcType=CHAR}, sysdate() + '0')
    </insert>

    <insert id="batchInsert">
      insert into course_record (id, course_name, course_file_url,
        course_id, date, class_time, upload_end_time,
        class_begin, class_end, classroom_id,
        check_code, create_date)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (gen_id('course_record'), #{item.courseName,jdbcType=VARCHAR},
            #{item.courseFileUrl,jdbcType=VARCHAR},
            #{item.courseId,jdbcType=INTEGER}, #{item.date,jdbcType=VARCHAR},
            #{item.classTime, jdbcType=VARCHAR}, #{item.uploadEndTime,jdbcType=VARCHAR},
            #{item.classBegin,jdbcType=INTEGER}, #{item.classEnd,jdbcType=INTEGER},
            #{item.classroomId,jdbcType=INTEGER},
            #{item.checkCode, jdbcType=CHAR}, sysdate() + '0')
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="gradle.demo.model.CourseRecord">
    update course_record
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_file_url = #{courseFileUrl,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      class_time = #{classTime, jdbcType=VARCHAR},
      upload_end_time = #{uploadEndTime,jdbcType=VARCHAR},
      class_begin = #{classBegin,jdbcType=INTEGER},
      class_end = #{classEnd,jdbcType=INTEGER},
      classroom_id = #{classroomId,jdbcType=INTEGER},
      modify_date = sysdate() + '0'
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateCRFileUrl">
    update course_record
    set course_file_url = #{fileUrl, jdbcType=VARCHAR}
    where id = #{id, jdbcType=INTEGER}
  </update>
</mapper>